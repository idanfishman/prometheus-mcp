name: CI

on:
  pull_request:
    branches:
      - master

concurrency:
  group: "${{ github.workflow }}-${{ github.event.pull_request.number || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint
      - run: pnpm format:check
      - run: pnpm typecheck

  security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
      - run: pnpm audit --audit-level high
      - uses: actions/dependency-review-action@v4

  test:
    needs:
      - lint
      - security
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version:
          - "20"
          - "22"
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - run: pnpm build
      - run: pnpm test:run

  docker:
    needs:
      - lint
      - security
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
        id: buildx
        with:
          platforms: linux/amd64
      - uses: docker/build-push-action@v6
        with:
          load: true
          platforms: ${{ steps.buildx.outputs.platforms }}
          push: false
          tags: ${{ github.repository }}:test
      - name: Test Docker image
        run: |
          echo "starting container..."
          docker run -d \
            --name test \
            --health-cmd="wget --quiet --tries=1 --spider http://localhost:3000/healthy || exit 1" \
            --health-interval=5s \
            --health-timeout=3s \
            --health-retries=3 \
            -p 3000:3000 \
            ${{ github.repository }}:test

          echo "waiting for container to be ready..."
          if timeout 30 bash -c 'until [ "$(docker inspect -f "{{.State.Health.Status}}" test)" == "healthy" ]; do sleep 2; done'; then
            echo "container is healthy"
          else
            echo "container did not become healthy in time"
            docker logs test || true
          fi
          docker rm -f test || true
